---
- name: install EPEL repo
  yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
  when: "ansible_os_family == 'RedHat'"

- name: install git
  package: name=git

- name: create /var/lib/pgsql/data
  file: state=directory dest=/var/lib/pgsql/data owner=postgres group=postgres

- name: create /etc/patroni
  file: state=directory dest=/etc/patroni

- name: put postgres.yml
  template: src=postgres0.yml dest=/etc/patroni/postgres.yml backup=yes

- name: checkout patroni
  git: repo=https://github.com/zalando/patroni.git dest=/opt/patroni version={{ patroni_version }}

- name: install pip
  yum: name=python2-pip
  when: "ansible_os_family == 'RedHat'"

- name: install pip
  apt: name=python-pip
  when: "ansible_os_family == 'Debian'"

- name: install gcc
  yum: name=gcc
  when: "ansible_os_family == 'RedHat'"

- name: install python-devel
  yum: name=python-devel
  when: "ansible_os_family == 'RedHat'"

- name: install deps
  pip: name={{ item }}
  with_items:
    - python-etcd
    - dnspython
    - boto
    - mock
    - psycopg2
    - PyYAML
    - requests
    - six
    - kazoo
    - psutil
    - python-dateutil
    - python-consul
    - click
    - cdiff
    - tzlocal
    - prettytable

- name: put patroni.sh
  template: src=patroni.sh dest=/var/lib/postgresql/patroni.sh mode=0755 backup=yes
  when: "ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version_compare(14.04, '<='))"

- name: put patroni.rb
  template: src=patroni.rb dest=/etc/eye/patroni.rb backup=yes
  when: "ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version_compare(14.04, '<='))"

- name: reload eye
  command: bash -c "source /usr/local/rvm/scripts/rvm && eye l /etc/eye/apps.eye"
  when: "ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version_compare(14.04, '<='))"

- name: create {{ patroni_datadir_prefix }}
  file: dest={{ patroni_datadir_prefix}} state=directory owner=postgres group=postgres mode=0700

- name: put custom config
  template: src=postgresql_custom.conf dest={{ patroni_custom_conf }} backup=yes
  when: "patroni_custom_conf is defined"

- name: disable the default service
  service: name={{ patroni_pg_default_service }} state=stopped enabled=no
  when: "ansible_os_family == 'Debian'"

- name: put a systemctl unit file
  template: src=patroni.service dest=/etc/systemd/system/patroni.service
  when: (ansible_distribution == 'Debian' and (ansible_distribution_major_version is version_compare(8, '>='))) or
        (ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version_compare(14.04, '>'))) or
        (ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7')

- name: enable and start patroni service
  service: name="patroni" enabled=yes state=started
  when: (ansible_distribution == 'Debian' and (ansible_distribution_major_version is version_compare(8, '>='))) or
        (ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version_compare(14.04, '>'))) or
        (ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7')
